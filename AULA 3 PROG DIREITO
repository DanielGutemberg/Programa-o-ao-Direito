AULA 3 DANIEL GUTEMBERG

1-PERGUNTA- A
A relação entre a LGPD e os Data Centers no Brasil
RESPOSTA - Uma das funções mais importantes é assegurar que as informações e sistemas hospedados nos Data Centers possam ser acessados a qualquer momento. A estrutura do controlador do Data Center é o local onde rodam o sistema e a rede de dados é instalada e mantida. É este lugar que deve operar com base nos preceitos da LGPD.

PERGUNTA B- Formatos de arquivos de dados proprietários e abertos
RESPOSTA-
OASIS OpenDocument Format for Office Applications (para suites e documentos para escritório)
LaTeX (uma linguagem de documentação)
Json (uma linguagem de documentação)
TXT ASCII Text - texto.
HTML - formato padrão na web.
PNG - formato comum de imagem na web.

PERGUNTA B2- discuta as implicações relacionadas a dados públicos
RESPOSTA B2-
Quando as informações pessoais não são protegidas adequadamente, indivíduos não autorizados podem obter acesso a elas. Isso pode resultar em roubo de identidade, fraude financeira e outros tipos de crimes cibernéticos.Deve ser tratada considerando a finalidade, a boa-fé e o interesse público que justificaram a sua disponibilização. A LGPD define, por exemplo, que uma organização pode, sem precisar pedir novo consentimento, tratar dados tornados anterior e manifestamente públicos pelo titular.


AULA 4 - DANIEL GUTEMBERG 
PERGUNTA 1-
1 – Explique as diferenças entre 3 linguagens de programação:
Resumo das Diferenças;
.Python é conhecida por sua simplicidade e facilidade de uso, ideal para desenvolvimento rápido e aplicações variadas, mas com menor desempenho.

.Java oferece uma boa combinação de portabilidade e desempenho com uma sintaxe mais rígida e é amplamente usada em ambientes corporativos e para desenvolvimento Android.

.C++ proporciona alto desempenho e controle sobre recursos de hardware, mas tem uma curva de aprendizado mais acentuada e requer gerenciamento manual de memória.
Cada linguagem tem suas próprias forças e é adequada para diferentes tipos de projetos e objetivos. A escolha entre elas depende das necessidades específicas do projeto e das preferências da equipe de desenvolvimento.

a. Tente fazer um código mínimo em cada uma delas
PYTHON- print("Olá, Mundo!")

JAVA - public class OlaMundo {
    public static void main(String[] args) {
        System.out.println("Olá, Mundo!");

C++- #include <iostream>

int main() {
    std::cout << "Olá, Mundo!" << std::endl;
    return 0;




AULA 6 CONTROLE DE FLUXO
def bubble_sort(lista):
  """Implementa o algoritmo de ordenação Bubble Sort.

  Args:
    lista: A lista a ser ordenada.

  Returns:
    A lista ordenada.
  """

  n = len(lista)

  # Traverse through all array elements
  for i in range(n):

    # Last i elements are already in place
    for j in range(0, n-i-1):

      # Traverse the array from 0 to n-i-1
      # Swap if the element found is greater
      # than the next element
      if lista[j] > lista[j+1] :
        lista[j], lista[j+1] = lista[j+1], lista[j]

  return lista

# Exemplo de uso:
lista_desordenada = [64, 34, 25, 12, 22, 11, 90]
lista_ordenada = bubble_sort(lista_desordenada)
print("Lista ordenada:", lista_ordenada)

def imprimir_vogais(texto):
  """Imprime as vogais presentes em um texto.

  Args:
    texto: A palavra ou frase a ser analisada.
  """

  vogais = "AEIOUaeiou"
  for letra in texto:
    if letra in vogais:
      print(letra)

# Exemplo de uso:
texto = "Olá, mundo!"
imprimir_vogais(texto)






